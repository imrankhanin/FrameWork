<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" total="5" passed="3">
  <reporter-output>
    <line>
      <![CDATA[Title is Matching: actiTIME - Login]]>
    </line>
    <line>
      <![CDATA[Element is present Username or Password is invalid. Please try again.]]>
    </line>
    <line>
      <![CDATA[Title is Matching: actiTIME - Login]]>
    </line>
    <line>
      <![CDATA[Version is matching]]>
    </line>
    <line>
      <![CDATA[Title is Matching: actiTIME - Login]]>
    </line>
    <line>
      <![CDATA[Title is Matching: actiTIME - Enter Time-Track]]>
    </line>
    <line>
      <![CDATA[Title is Matching: actiTIME - Login]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="76093" started-at="2018-06-28T16:49:02Z" finished-at="2018-06-28T16:50:19Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="76093" started-at="2018-06-28T16:49:02Z" finished-at="2018-06-28T16:50:19Z">
      <class name="com.actitime.tests.ValidLoginLogoutTest">
        <test-method status="PASS" signature="preCondition()[pri:0, instance:com.actitime.tests.ValidLoginLogoutTest@b684286]" name="preCondition" is-config="true" duration-ms="16844" started-at="2018-06-28T22:19:52Z" finished-at="2018-06-28T22:20:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method status="PASS" signature="testValidLoginLogout()[pri:0, instance:com.actitime.tests.ValidLoginLogoutTest@b684286]" name="testValidLoginLogout" duration-ms="8851" started-at="2018-06-28T22:20:09Z" finished-at="2018-06-28T22:20:18Z">
          <reporter-output>
            <line>
              <![CDATA[Title is Matching: actiTIME - Login]]>
            </line>
            <line>
              <![CDATA[Title is Matching: actiTIME - Enter Time-Track]]>
            </line>
            <line>
              <![CDATA[Title is Matching: actiTIME - Login]]>
            </line>
          </reporter-output>
        </test-method> <!-- testValidLoginLogout -->
        <test-method status="PASS" signature="postCondition()[pri:0, instance:com.actitime.tests.ValidLoginLogoutTest@b684286]" name="postCondition" is-config="true" duration-ms="762" started-at="2018-06-28T22:20:18Z" finished-at="2018-06-28T22:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- com.actitime.tests.ValidLoginLogoutTest -->
      <class name="com.actitime.tests.InvalidLoginTest">
        <test-method status="PASS" signature="preCondition()[pri:0, instance:com.actitime.tests.InvalidLoginTest@6e8dacdf]" name="preCondition" is-config="true" duration-ms="12556" started-at="2018-06-28T22:19:02Z" finished-at="2018-06-28T22:19:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method status="PASS" signature="testInvalidLogin()[pri:0, instance:com.actitime.tests.InvalidLoginTest@6e8dacdf]" name="testInvalidLogin" duration-ms="4870" started-at="2018-06-28T22:19:15Z" finished-at="2018-06-28T22:19:20Z">
          <reporter-output>
            <line>
              <![CDATA[Title is Matching: actiTIME - Login]]>
            </line>
            <line>
              <![CDATA[Element is present Username or Password is invalid. Please try again.]]>
            </line>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method status="PASS" signature="postCondition()[pri:0, instance:com.actitime.tests.InvalidLoginTest@6e8dacdf]" name="postCondition" is-config="true" duration-ms="792" started-at="2018-06-28T22:19:20Z" finished-at="2018-06-28T22:19:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- com.actitime.tests.InvalidLoginTest -->
      <class name="com.actitime.tests.DemoTest">
        <test-method status="PASS" signature="preCondition()[pri:0, instance:com.actitime.tests.DemoTest@34ce8af7]" name="preCondition" is-config="true" duration-ms="14420" started-at="2018-06-28T22:19:36Z" finished-at="2018-06-28T22:19:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method status="SKIP" signature="testA()[pri:0, instance:com.actitime.tests.DemoTest@34ce8af7]" name="testA" duration-ms="4" started-at="2018-06-28T22:19:51Z" finished-at="2018-06-28T22:19:51Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.fail(Assert.java:101)
	at com.actitime.tests.DemoTest.testA(DemoTest.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method status="FAIL" signature="testA()[pri:0, instance:com.actitime.tests.DemoTest@34ce8af7]" name="testA" duration-ms="1" started-at="2018-06-28T22:19:51Z" finished-at="2018-06-28T22:19:51Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.fail(Assert.java:101)
	at com.actitime.tests.DemoTest.testA(DemoTest.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:969)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1148)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testA -->
        <test-method status="PASS" signature="postCondition()[pri:0, instance:com.actitime.tests.DemoTest@34ce8af7]" name="postCondition" is-config="true" duration-ms="758" started-at="2018-06-28T22:19:51Z" finished-at="2018-06-28T22:19:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- com.actitime.tests.DemoTest -->
      <class name="com.actitime.tests.VerifyVersionTest">
        <test-method status="PASS" signature="preCondition()[pri:0, instance:com.actitime.tests.VerifyVersionTest@7a79be86]" name="preCondition" is-config="true" duration-ms="14694" started-at="2018-06-28T22:19:21Z" finished-at="2018-06-28T22:19:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method status="PASS" signature="testVerifyVersion()[pri:0, instance:com.actitime.tests.VerifyVersionTest@7a79be86]" name="testVerifyVersion" duration-ms="235" started-at="2018-06-28T22:19:35Z" finished-at="2018-06-28T22:19:36Z">
          <reporter-output>
            <line>
              <![CDATA[Title is Matching: actiTIME - Login]]>
            </line>
            <line>
              <![CDATA[Version is matching]]>
            </line>
          </reporter-output>
        </test-method> <!-- testVerifyVersion -->
        <test-method status="PASS" signature="postCondition()[pri:0, instance:com.actitime.tests.VerifyVersionTest@7a79be86]" name="postCondition" is-config="true" duration-ms="757" started-at="2018-06-28T22:19:36Z" finished-at="2018-06-28T22:19:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
      </class> <!-- com.actitime.tests.VerifyVersionTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
